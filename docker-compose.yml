services:
  database:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: aion
      POSTGRES_PASSWORD: Admin
      PGDATA: /var/lib/postgresql/data
    ports:
      - "10000:5432"
    networks:
      - network
    volumes:
      - postgres:/data/postgres
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    command: [ "redis-server", "--requirepass", "Admin" ] # Ensure password protection
    environment:
      REDIS_PASSWORD: Admin
    ports:
      - "6379:6379"
    networks:
      - network
    volumes:
      - redis:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=aion
      - MONGO_INITDB_ROOT_PASSWORD=Admin

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - network

  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  mongo:
    driver: local

networks:
  network:
    driver: bridge
